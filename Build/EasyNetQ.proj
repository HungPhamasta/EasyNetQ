<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="4.0" DefaultTargets="Default">

    <PropertyGroup>
        <BaseDir>$(MSBuildProjectDirectory)\..</BaseDir>
        <OutputDir>$(BaseDir)\bin</OutputDir>
        <Tools>$(BaseDir)\Tools</Tools>
        <MSBuildCommunityTasksPath>$(Tools)\MSBuildCommunityTasks</MSBuildCommunityTasksPath>
        <Package>$(BaseDir)\Package</Package>
        <Source>$(BaseDir)\Source</Source>
        <BuildNumber Condition=" '$(APPVEYOR_BUILD_NUMBER)' != '' ">$(APPVEYOR_BUILD_NUMBER)</BuildNumber>
        <BuildNumber Condition=" '$(BUILD_NUMBER)' != '' ">$(BUILD_NUMBER)</BuildNumber>
        <BuildNumber Condition=" '$(BuildNumber)' == '' ">0</BuildNumber>
    </PropertyGroup>

    <!-- Properties that are set during build to find test/merge binaries -->
    <PropertyGroup>
        <Configuration>Release</Configuration>
        <DesktopFrameworkVersion>net451</DesktopFrameworkVersion>
        <BinaryDesktopFolder>bin\$(Configuration)\$(DesktopFrameworkVersion)</BinaryDesktopFolder>
    </PropertyGroup>

    <Import Project="$(MSBuildCommunityTasksPath)\MSBuild.Community.Tasks.Targets"/>

    <Target Name="Default" DependsOnTargets="Version; Build; Test; Package" />

    <Target Name="Version">
        <FileUpdate Files="$(Source)\Version.cs"
            Regex="AssemblyVersion\(&quot;(\d+)\.(\d+)\.(\d+)\.(\d+)&quot;\)"
            ReplacementText="AssemblyVersion(&quot;$1.$2.$3.$(BuildNumber)&quot;)" />
    </Target>

    <ItemGroup>
        <ProjectToBuild Include="$(Source)\EasyNetQ.sln">
            <Properties>Configuration=$(Configuration)</Properties>
        </ProjectToBuild>
    </ItemGroup>

    <!-- Restore all packages in solution -->
    <Target Name="Restore" DependsOnTargets="Version">
        <MSBuild Projects="@(ProjectToBuild)" Targets="Restore" />
    </Target>

    <!-- MSBuild only occurs after restore and version. -->
    <Target Name="Build" DependsOnTargets="Version; Restore">
        <MSBuild Projects="@(ProjectToBuild)" Targets="Rebuild"/>
    </Target>

    <!-- Test all projects against their targeted frameworks. Only tests that
        are not Integration or Explicit tests. -->
    <Target Name="Test" DependsOnTargets="Build">
        <ItemGroup>
            <TestProjects Include="$(Source)\EasyNetQ.Tests\EasyNetQ.Tests.csproj" />
            <TestProjects Include="$(Source)\EasyNetQ.DI.Tests\EasyNetQ.DI.Tests.csproj" />
            <TestProjects Include="$(Source)\EasyNetQ.Hosepipe.Tests\EasyNetQ.Hosepipe.Tests.csproj" />
            <TestProjects Include="$(Source)\EasyNetQ.Scheduler.Tests\EasyNetQ.Scheduler.Tests.csproj" />
            <TestProjects Include="$(Source)\EasyNetQ.Scheduler.Mongo.Tests\EasyNetQ.Scheduler.Mongo.Tests.csproj" />
        </ItemGroup>

        <Exec WorkingDirectory="%(TestProjects.RootDir)\%(TestProjects.Directory)"
              Command='dotnet test --configuration $(Configuration) --no-build --filter "Category!=Explicit&#038;Category!=Integration"'
              ContinueOnError="ErrorAndContinue" />
    </Target>

    <!-- Packaging -->
    <Target Name="Package" DependsOnTargets="Test">
        <PropertyGroup>
            <NuGetPackageDirectory>$(Package)</NuGetPackageDirectory>
        </PropertyGroup>
        <ItemGroup>
            <ClientLibraries Include="$(Source)\EasyNetQ\EasyNetQ.csproj" />
            <ClientLibraries Include="$(Source)\EasyNetQ.DI.*\EasyNetQ.DI.*.csproj" Exclude="$(Source)\*Tests*\*.csproj" />
            <ClientLibraries Include="$(Source)\EasyNetQ.Serilog\EasyNetQ.Serilog.csproj" />

            <FilesToDelete Include="$(NuGetPackageDirectory)\*.nupkg" />
        </ItemGroup>

        <MakeDir Directories="$(NuGetPackageDirectory)" Condition="!Exists('$(NuGetPackageDirectory)')" />
        <Delete Files="@(FilesToDelete)" />
        <MSBuild Projects="@(ClientLibraries)" Targets="Pack"
            Properties="Configuration=$(Configuration);PackageOutputPath=$(NuGetPackageDirectory)" />
    </Target>
</Project>
